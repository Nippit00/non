<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel='stylesheet' href='https://use.fontawesome.com/releases/v5.7.0/css/all.css' integrity='sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ' crossorigin='anonymous'>
  <script src="https://cdn.tailwindcss.com"></script>
  <title>Dashboard</title>
  <link rel="icon" type="image/x-icon" href="../tracktag/img/favi.png">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-chart-matrix"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-chart-treemap"></script>
<style>
@import url('https://fonts.googleapis.com/css2?family=Sarabun:wght@400;700&display=swap');

  .font-th-sarabun {
      font-family: 'Sarabun', sans-serif;
  }
  </style>
</head>

<body class="font-th-sarabun">

  <div id="spinner-container" class="flex fixed inset-0 bg-white bg-opacity-90 z-50 flex-col justify-center items-center">
    <img id="static-image" src="/img/favi.png" alt="Loading..." class="w-24 h-auto mb-5">
    <div id="spinner" class="flex gap-2">
      <div class="dot"></div>
      <div class="dot"></div>
      <div class="dot"></div>
    </div>
  </div>

  <%- include('../component/navbar.ejs') %>

  <div class="w-full">
    <img src="/img/banner.png" alt="Banner Image" class="w-full">
  </div>

  <div class="text-center py-5">
    <h1 class="text-4xl">
      ผลรายงานความคืบหน้า<span class="text-[#04b2a1]">เมืองที่ได้รับตราสัญลักษณ์</span>
    </h1>
  </div>

  <%- include('../component/menu2.ejs') %>

  
  <div class="mt-5 border-2 border-inherit rounded-3xl w-dvh  md:w-3/5 mx-auto ">
    <div class="border-b-2">
      <div class="flex justify-between items-center bg-gradient-to-r from-gray-100 to-white rounded-t-3xl h-16">
        <div class="text-xl mx-5"><%= data[0].cityName %></div>
        <div ><img src="/img/navpic.png" alt="logo" class="w-72"></div>
      </div>
      <div class="flex justify-between h-16 items-center">
        <div class="text-xl mx-5">วิสัยทัศน์:ยังไม่มี</div>
        <div class="text-xl mx-5"> ประเภท: <%= new Date() - new Date(data.date) < 6 * 30 * 24 * 60 * 60 * 1000 ? 'เมืองใหม่' : 'เมืองเก่า' %></div>
      </div>
    </div>  
        <!-- กราฟ  -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
          <!-- บริการเมืองอัจฉริยะ -->
          <% const initialRound=JSON.parse(rounded)[Object.keys(JSON.parse(rounded)).length]; %>
          <div class="card col-span-1 lg:ml-3">
              <h3 class="section-title">บริการเมืองอัจฉริยะ : <span style="color: #2c7f97;">
                  <%= Object.keys(initialRound.smartkeycount).length-1 %>
              </span>
              Smarts <br />จำนวนโครงการ : <span style="color: #d0a519;">
                  <%= initialRound.count-4 %>
              </span> โครงการ</h3>
              <div class="grid grid-cols-3 gap-2">
                  <!-- Icon blocks looped through initialRound.smartkeycount -->
                  <% Object.entries(initialRound.smartkeycount).forEach(([key, count]) => { if(key==="PIF"||key==="DIF"){}
                  else{%>



const stackedBarCtx = document.getElementById('stackedBarChart').getContext('2d');
const stackedBarChart = new Chart(stackedBarCtx, {
  type: 'bar',
  data: {
    labels: Object.keys(initialRound.smartkeycount),
    datasets: [{
      label: 'โครงการที่สำเร็จแล้ว ',
      data: Object.values(initialRound.success),
      backgroundColor: '#37B7C3'
    },
    {
      label: 'โครงการที่ยังไม่สำเร็จ',
      data: Object.values(initialRound.unsuccess),
      backgroundColor: '#cccccc'
    }
    ]
  },
  options: {
    scales: {
      x: {
        stacked: true
      },
      y: {
        stacked: true,
        beginAtZero: true
      }
    },
    plugins: {
      legend: {
        display: true,
        position: 'bottom'
      },
      tooltip: {
        callbacks: {
          label: tooltipItem => `${tooltipItem.dataset.label}: ${tooltipItem.raw}`
        }
      },
      datalabels: {
        display: true,
        color: '#000',
        font: {
          weight: 'bold',
          family: "'Sarabun', sans-serif"
        },
        formatter: (value, context) => value === 0 ? null : value
      }
    }
  },
  plugins: [ChartDataLabels]
});


const avgProgressCtx = document.getElementById('avgprogress').getContext('2d');

const entries = Object.entries(initialRound.averageProgressPerSmart);

// จัดเรียงอาร์เรย์ตามค่า value
const sortedEntries = entries.sort((a, b) => b[1] - a[1]);

// แปลงอาร์เรย์ที่จัดเรียงแล้วกลับเป็นวัตถุ (ถ้าต้องการ)
const sortedObject = Object.fromEntries(sortedEntries);

const labels = Object.keys(sortedObject);
const data = Object.values(sortedObject);
const treemapData = labels.map((label, index) => (
{
v: data[index],
label: label,

}));

function colorFromValue(value, border) {
      var alpha = value / 100;
      var color = "#36BA98";
      if (border) {
          alpha += 0.1;
        }
      return Chart.helpers.color(color)
          .alpha(alpha)
          .rgbString();
  }


const avgProgressChart = new Chart(avgProgressCtx, {
type: 'treemap',
data: {
  datasets: [
    {
      label: "ความคืบหน้าโครงการตามแผน",
      data: data,
      backgroundColor: function (ctx) {
                      return colorFromValue(ctx.dataset.data[ctx.dataIndex].v);
                  },
      borderColor: function (ctx) {
                      return colorFromValue(ctx.dataset.data[ctx.dataIndex].v, true);
                  },
      borderWidth: 2,
      spacing: 0.1,
    },
  ],
},
options: {
  plugins: {
    datalabels: {
      formatter: (value, context) => labels[context.dataIndex],
      color: '#000',
      align: 'center',
      anchor: 'center',
      font: {
        weight: 'bold',
        size: 14,
        family: "'Sarabun', sans-serif"
      },
    },
    tooltip: {
      callbacks: {
        label: (context) => `ค่าเฉลี่ยความสำเร็จ: ${context.raw.v}%`,
      },
    },
  },
  maintainAspectRatio: false,
  title: {
    display: true,
    text: 'Basic Treemap Sample',
  },
  legend: {
    display: false,
  },
},
plugins: [ChartDataLabels],
});

</script>

</html>
